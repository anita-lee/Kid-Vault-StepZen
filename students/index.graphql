type Student {
  id: Int
  first_name: String
  last_name: String
  birth_date: String
  classroom: String
  image_url: String
  contacts: [Contact]
    @materializer(
      query: "getContactsByStudentId"
      arguments: [{ name: "student_id", field: "id" }]
    )
  medical_record: MedicalRecord
    @materializer(
      query: "getMedicalRecordsByStudentId"
      arguments: [{ name: "student_id", field: "id" }]
    )
}

input StudentInput {
  first_name: String!
  last_name: String!
  birth_date: String!
  classroom: String!
}

type Contact {
  email: String
  name: String
  other: String
  phone: String
  relation: String
  student_id: Int
}

type MedicalRecord {
  student_id: Int
  student_weight: Float
  student_height: Float
  polio: String
  mmr: String
  covid1: String
  covid2: String
  flu: String
  tb: String
  tetanus: String
}

type Query {
  getAllStudents: [Student]
    @rest(
      endpoint: "http://test-mom-api.herokuapp.com/students"
      headers: [
        { name: "authentication", value: "$authentication_f43f208820;" }
      ]
      configuration: "curl_import_config"
    )

  getStudentById(student_id: Int!): Student
    @rest(
      endpoint: "https://test-mom-api.herokuapp.com/students/$student_id"
      configuration: "curl_import_config"
    )

  getStudentsByGuardianUsername(guardian_username: String!): [Student]
    @rest(
      endpoint: "https://test-mom-api.herokuapp.com/guardianchildren/$guardian_username"
      configuration: "curl_import_config"
    )

  getMedicalRecordsByStudentId(student_id: Int): MedicalRecord
    @rest(
      endpoint: "https://test-mom-api.herokuapp.com/medicalrecords/$student_id"
    )

  getContactsByStudentId(student_id: Int): [Contact]
    @rest(endpoint: "https://test-mom-api.herokuapp.com/contacts/$student_id")
}

type Mutation {
  addStudent(
    first_name: String!
    last_name: String!
    birth_date: String!
    classroom: String!
    image_url: String!
  ): JSON
    @rest(method: POST, endpoint: "https://test-mom-api.herokuapp.com/students")
}
